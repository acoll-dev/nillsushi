(function() {
  'use strict';
  angular.module('mainApp').controller('finishCtrl', ["$rootScope", "$scope", "$localStorage", "$grRestful", "$grModal", "$grAlert", "$cidadeEstado", "$timeout", function($rootScope, $scope, $localStorage, $grRestful, $grModal, $grAlert, $cidadeEstado, $timeout) {
    var alert, cartEmpty, finished;
    alert = $grAlert["new"]();
    finished = false;
    cartEmpty = function(url) {
      alert.show('info', 'Sua lista de pedidos está vazia, você será redirecionado!');
      return $timeout(function() {
        return location.href = $rootScope.GRIFFO.curAlias + '/' + (url ? url : '');
      }, 5000);
    };
    if ($rootScope.gr.cart.length() === 0) {
      return cartEmpty();
    } else {
      $rootScope.gr.title = {
        icon: 'fa fa-fw fa-check',
        text: 'Finalizar pedido'
      };
      $scope.payments = ['Dinheiro', 'Cartão de Crédito/Débito'];
      $scope.addresses = [$rootScope.GRIFFO.user.address + ', ' + $rootScope.GRIFFO.user.number + ($rootScope.GRIFFO.user.complement ? ', ' + $rootScope.GRIFFO.user.complement : '') + ', ' + $rootScope.GRIFFO.user.district, 'Outro...'];
      $scope.shops = [];
      $grRestful.find({
        module: 'shop',
        action: 'select'
      }).then(function(r) {
        if (r.response) {
          return $scope.shops = r.response;
        }
      });
      $scope.states = [];
      angular.forEach($cidadeEstado.get.estados(), function(e) {
        $scope.states.push({
          value: e[0],
          label: e[1]
        });
      });
      delete $localStorage.griffo_cart_ready;
      $scope.formSettings = {
        data: {
          status: 0,
          date: new Date,
          formpayment: 'Dinheiro',
          address: $scope.addresses[0],
          state: $rootScope.GRIFFO.user.state,
          city: $rootScope.GRIFFO.user.city,
          fkidshop: $rootScope.GRIFFO.user.fkidshop
        },
        schema: [
          {
            property: 'fkidshop',
            type: 'select',
            label: 'Loja',
            list: 'item.value as item.label for item in shops',
            columns: 12,
            attr: {
              required: true,
              ngShow: 'shops.length > 2'
            },
            msgs: {
              required: 'A loja é obrigatória'
            }
          }, {
            property: 'date',
            type: 'date',
            label: 'Data do pedido',
            columns: 6,
            attr: {
              required: true
            },
            msgs: {
              required: 'A data é obrigatória'
            }
          }, {
            property: 'fetch',
            type: 'checkbox',
            label: 'Vai buscar?',
            columns: 6
          }, {
            property: 'formpayment',
            type: 'select',
            label: 'Forma de pagamento',
            list: 'item as item for item in payments',
            attr: {
              required: true,
              ngIf: '!formSettings.data.fetch'
            },
            msgs: {
              required: 'A forma de pagamento é obrigatória'
            }
          }, {
            property: 'change',
            type: 'money',
            label: 'LABEL.CHANGE.FOR',
            placeholder: '0,00',
            columns: 6,
            attr: {
              ngIf: 'formSettings.data.formpayment === \'Dinheiro\' && !formSettings.data.fetch'
            }
          }, {
            type: 'hr',
            attr: {
              'ng-if': '!formSettings.data.fetch'
            }
          }, {
            property: 'address',
            type: 'select',
            label: 'Endereço de entrega',
            list: 'item as item for item in addresses',
            attr: {
              required: true,
              ngIf: '!formSettings.data.fetch'
            },
            msgs: {
              required: 'O endereço de entrega é obrigatório'
            }
          }, {
            property: 'address1',
            label: 'Novo endereço',
            columns: 8,
            attr: {
              required: true,
              ngIf: 'formSettings.data.address === \'Outro...\' && !formSettings.data.fetch'
            },
            msgs: {
              required: 'O novo endereço é obrigatório'
            }
          }, {
            property: 'number',
            type: 'number',
            label: 'Número',
            columns: 4,
            attr: {
              required: true,
              ngIf: 'formSettings.data.address === \'Outro...\' && !formSettings.data.fetch'
            },
            msgs: {
              required: 'O número é obrigatório'
            }
          }, {
            property: 'complement',
            label: 'Complemento',
            columns: 6,
            attr: {
              ngIf: 'formSettings.data.address === \'Outro...\' && !formSettings.data.fetch'
            }
          }, {
            property: 'district',
            label: 'Bairro',
            columns: 6,
            attr: {
              required: true,
              ngIf: 'formSettings.data.address === \'Outro...\' && !formSettings.data.fetch'
            },
            msgs: {
              required: 'O bairro é obrigatório'
            }
          }, {
            property: 'state',
            type: 'select',
            label: 'Estado',
            columns: 6,
            list: 'item.value as item.label for item in states',
            attr: {
              required: true,
              ngIf: 'formSettings.data.address === \'Outro...\' && !formSettings.data.fetch'
            },
            msgs: {
              required: 'Selecione um estado'
            }
          }, {
            property: 'city',
            type: 'select',
            label: 'Cidade',
            columns: 6,
            list: 'item.value as item.label for item in cities',
            attr: {
              required: true,
              ngIf: 'formSettings.data.address === \'Outro...\' && !formSettings.data.fetch'
            },
            msgs: {
              required: 'Selecione uma cidade'
            }
          }
        ],
        submit: function(data) {
          var order;
          if (!$scope.form.$valid) {
            return;
          }
          order = {
            fkidclient: $rootScope.GRIFFO.user.id,
            fetch: data.fetch,
            subtotal: $rootScope.gr.cart.total(),
            fkidshop: data.fkidshop,
            products: []
          };
          angular.forEach($rootScope.gr.cart.items, function(item) {
            if (item.count > 0) {
              return order.products.push({
                idproduct: item.id,
                fkidshop: data.fkidshop,
                quantity: item.count
              });
            }
          });
          if (!data.fetch) {
            order.formpayment = data.formpayment ? data.formpayment : void 0;
            order.change = data.change ? data.change : void 0;
            if (data.address === 'Outro...') {
              order.address = data.address1;
              order.number = data.number;
              order.complement = data.complement;
              order.district = data.district;
              order.city = data.city;
              order.state = data.state;
            } else {
              order.address = $rootScope.GRIFFO.user.address;
              order.number = $rootScope.GRIFFO.user.number;
              order.complement = $rootScope.GRIFFO.user.complement;
              order.district = $rootScope.GRIFFO.user.district;
              order.city = $rootScope.GRIFFO.user.city;
              order.state = $rootScope.GRIFFO.user.state;
            }
          }
          return $grRestful.create({
            module: 'order',
            action: 'insert',
            post: order
          }).then(function(r) {
            if (r.response) {
              finished = true;
              $scope.form.reset();
              $rootScope.gr.cart.clear();
              alert.show(r.status, 'Seu pedido foi enviado com sucesso, você será redirecionado para acompanhar seu pedido.');
              $timeout((function() {
                location.href = $rootScope.GRIFFO.curAlias + '/user';
              }), 5000);
            } else {
              alert.show(r.status, r.message);
            }
          }, function() {
            return alert.show('danger', 'ERROR.FATAL');
          });
        }
      };
      $scope.$watch('formSettings.data.state', function(e) {
        if (e) {
          if ($scope.formSettings.data.state) {
            $scope.cities = [];
            angular.forEach($cidadeEstado.get.cidades($scope.formSettings.data.state), function(c) {
              $scope.cities.push({
                value: c,
                label: c
              });
            });
          } else {
            $scope.cities = [];
          }
          if ($scope.formSettings.data.state === 'SP') {
            return $scope.formSettings.data.city = 'Itapeva';
          } else {
            return $scope.formSettings.data.city = void 0;
          }
        } else {
          return $scope.formSettings.data.city = void 0;
        }
      });
      $scope.$watch(function() {
        return $rootScope.gr.cart.length();
      }, function() {
        if ($rootScope.gr.cart.length() === 0 && !finished) {
          return cartEmpty();
        }
      });
      return $scope.$watch('form', function(form) {
        return $rootScope.finishForm = form;
      });
    }
  }]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9sYXllcnMvd2Vic2l0ZS90ZW1wbGF0ZXMvY3JhYi9jb2ZmZWUvY29udHJvbGxlcnMvZmluaXNoQ3RybC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBQTtFQUNBLE9BQU8sQ0FBQyxNQUFSLENBQWUsU0FBZixDQUF5QixDQUFDLFVBQTFCLENBQXFDLFlBQXJDLEVBQW1ELFNBQUMsVUFBRCxFQUFhLE1BQWIsRUFBcUIsYUFBckIsRUFBb0MsVUFBcEMsRUFBZ0QsUUFBaEQsRUFBMEQsUUFBMUQsRUFBb0UsYUFBcEUsRUFBbUYsUUFBbkY7QUFFL0MsUUFBQTtJQUFBLEtBQUEsR0FBUSxRQUFRLENBQUMsS0FBRCxDQUFSLENBQUE7SUFDUixRQUFBLEdBQVc7SUFFWCxTQUFBLEdBQVksU0FBQyxHQUFEO01BQ1IsS0FBSyxDQUFDLElBQU4sQ0FBVyxNQUFYLEVBQW1CLDJEQUFuQjthQUNBLFFBQUEsQ0FBUyxTQUFBO2VBQ0wsUUFBUSxDQUFDLElBQVQsR0FBZ0IsVUFBVSxDQUFDLE1BQU0sQ0FBQyxRQUFsQixHQUE2QixHQUE3QixHQUFtQyxDQUFJLEdBQUgsR0FBWSxHQUFaLEdBQXFCLEVBQXRCO01BRDlDLENBQVQsRUFFRSxJQUZGO0lBRlE7SUFNWixJQUFHLFVBQVUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQW5CLENBQUEsQ0FBQSxLQUErQixDQUFsQzthQUNJLFNBQUEsQ0FBQSxFQURKO0tBQUEsTUFBQTtNQUdJLFVBQVUsQ0FBQyxFQUFFLENBQUMsS0FBZCxHQUNJO1FBQUEsSUFBQSxFQUFNLG1CQUFOO1FBQ0EsSUFBQSxFQUFNLGtCQUROOztNQUVKLE1BQU0sQ0FBQyxRQUFQLEdBQWtCLENBQ2QsVUFEYyxFQUVkLDBCQUZjO01BSWxCLE1BQU0sQ0FBQyxTQUFQLEdBQW1CLENBQ2YsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBdkIsR0FBaUMsSUFBakMsR0FBd0MsVUFBVSxDQUFDLE1BQU0sQ0FB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S0FBQSxFQUFPLENBQVA7Z0JBQ0EsS0FBQSxFQUFPLENBRFA7ZUFESjtZQUR1RSxDQUEzRSxFQUZKO1dBQUEsTUFBQTtZQVFJLE1BQU0sQ0FBQyxNQUFQLEdBQWdCLEdBUnBCOztVQVNBLElBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBekIsS0FBa0MsSUFBckM7bUJBQ0ksTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBekIsR0FBZ0MsVUFEcEM7V0FBQSxNQUFBO21CQUdJLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQXpCLEdBQWdDLE9BSHBDO1dBVko7U0FBQSxNQUFBO2lCQWVJLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQXpCLEdBQWdDLE9BZnBDOztNQURxQyxDQUF6QztNQWtCQSxNQUFNLENBQUMsTUFBUCxDQUFjLFNBQUE7ZUFDVixVQUFVLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFuQixDQUFBO01BRFUsQ0FBZCxFQUVFLFNBQUE7UUFDRSxJQUFlLFVBQVUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQW5CLENBQUEsQ0FBQSxLQUErQixDQUEvQixJQUFxQyxDQUFDLFFBQXJEO2lCQUFBLFNBQUEsQ0FBQSxFQUFBOztNQURGLENBRkY7YUFLQSxNQUFNLENBQUMsTUFBUCxDQUFjLE1BQWQsRUFBc0IsU0FBQyxJQUFEO2VBQ2xCLFVBQVUsQ0FBQyxVQUFYLEdBQXdCO01BRE4sQ0FBdEIsRUF4T0o7O0VBWCtDLENBQW5EO0FBREEiLCJmaWxlIjoiY2xpZW50L2xheWVycy93ZWJzaXRlL3RlbXBsYXRlcy9jcmFiL2pzL2NvbnRyb2xsZXJzL2ZpbmlzaEN0cmwuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbmFuZ3VsYXIubW9kdWxlKCdtYWluQXBwJykuY29udHJvbGxlciAnZmluaXNoQ3RybCcsICgkcm9vdFNjb3BlLCAkc2NvcGUsICRsb2NhbFN0b3JhZ2UsICRnclJlc3RmdWwsICRnck1vZGFsLCAkZ3JBbGVydCwgJGNpZGFkZUVzdGFkbywgJHRpbWVvdXQpIC0+XG5cbiAgICBhbGVydCA9ICRnckFsZXJ0Lm5ldygpXG4gICAgZmluaXNoZWQgPSBmYWxzZVxuXG4gICAgY2FydEVtcHR5ID0gKHVybCkgLT5cbiAgICAgICAgYWxlcnQuc2hvdyAnaW5mbycsICdTdWEgbGlzdGEgZGUgcGVkaWRvcyBlc3TDoSB2YXppYSwgdm9jw6ogc2Vyw6EgcmVkaXJlY2lvbmFkbyEnXG4gICAgICAgICR0aW1lb3V0IC0+XG4gICAgICAgICAgICBsb2NhdGlvbi5ocmVmID0gJHJvb3RTY29wZS5HUklGRk8uY3VyQWxpYXMgKyAnLycgKyAoaWYgdXJsIHRoZW4gdXJsIGVsc2UgJycpXG4gICAgICAgICwgNTAwMFxuXG4gICAgaWYgJHJvb3RTY29wZS5nci5jYXJ0Lmxlbmd0aCgpID09IDBcbiAgICAgICAgY2FydEVtcHR5KClcbiAgICBlbHNlXG4gICAgICAgICRyb290U2NvcGUuZ3IudGl0bGUgPVxuICAgICAgICAgICAgaWNvbjogJ2ZhIGZhLWZ3IGZhLWNoZWNrJ1xuICAgICAgICAgICAgdGV4dDogJ0ZpbmFsaXphciBwZWRpZG8nXG4gICAgICAgICRzY29wZS5wYXltZW50cyA9IFtcbiAgICAgICAgICAgICdEaW5oZWlybydcbiAgICAgICAgICAgICdDYXJ0w6NvIGRlIENyw6lkaXRvL0TDqWJpdG8nXG4gICAgICAgIF1cbiAgICAgICAgJHNjb3BlLmFkZHJlc3NlcyA9IFtcbiAgICAgICAgICAgICRyb290U2NvcGUuR1JJRkZPLnVzZXIuYWRkcmVzcyArICcsICcgKyAkcm9vdFNjb3BlLkdSSUZGTy51c2VyLm51bWJlciArIChpZiAkcm9vdFNjb3BlLkdSSUZGTy51c2VyLmNvbXBsZW1lbnQgdGhlbiAnLCAnICsgJHJvb3RTY29wZS5HUklGRk8udXNlci5jb21wbGVtZW50IGVsc2UgJycpICsgJywgJyArICRyb290U2NvcGUuR1JJRkZPLnVzZXIuZGlzdHJpY3RcbiAgICAgICAgICAgICdPdXRyby4uLidcbiAgICAgICAgXVxuICAgICAgICAkc2NvcGUuc2hvcHMgPSBbXVxuXG4gICAgICAgICRnclJlc3RmdWwuZmluZChcbiAgICAgICAgICAgIG1vZHVsZTogJ3Nob3AnXG4gICAgICAgICAgICBhY3Rpb246ICdzZWxlY3QnKS50aGVuIChyKSAtPlxuICAgICAgICAgICAgaWYgci5yZXNwb25zZVxuICAgICAgICAgICAgICAgICRzY29wZS5zaG9wcyA9IHIucmVzcG9uc2VcblxuICAgICAgICAkc2NvcGUuc3RhdGVzID0gW11cblxuICAgICAgICBhbmd1bGFyLmZvckVhY2ggJGNpZGFkZUVzdGFkby5nZXQuZXN0YWRvcygpLCAoZSkgLT5cbiAgICAgICAgICAgICRzY29wZS5zdGF0ZXMucHVzaFxuICAgICAgICAgICAgICAgIHZhbHVlOiBlWzBdXG4gICAgICAgICAgICAgICAgbGFiZWw6IGVbMV1cbiAgICAgICAgICAgIHJldHVyblxuXG4gICAgICAgIGRlbGV0ZSAkbG9jYWxTdG9yYWdlLmdyaWZmb19jYXJ0X3JlYWR5XG5cbiAgICAgICAgJHNjb3BlLmZvcm1TZXR0aW5ncyA9XG4gICAgICAgICAgICBkYXRhOlxuICAgICAgICAgICAgICAgIHN0YXR1czogMFxuICAgICAgICAgICAgICAgIGRhdGU6IG5ldyBEYXRlXG4gICAgICAgICAgICAgICAgZm9ybXBheW1lbnQ6ICdEaW5oZWlybydcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiAkc2NvcGUuYWRkcmVzc2VzWzBdXG4gICAgICAgICAgICAgICAgc3RhdGU6ICRyb290U2NvcGUuR1JJRkZPLnVzZXIuc3RhdGVcbiAgICAgICAgICAgICAgICBjaXR5OiAkcm9vdFNjb3BlLkdSSUZGTy51c2VyLmNpdHlcbiAgICAgICAgICAgICAgICBma2lkc2hvcDogJHJvb3RTY29wZS5HUklGRk8udXNlci5ma2lkc2hvcFxuICAgICAgICAgICAgc2NoZW1hOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eTogJ2ZraWRzaG9wJ1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc2VsZWN0J1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ0xvamEnXG4gICAgICAgICAgICAgICAgICAgIGxpc3Q6ICdpdGVtLnZhbHVlIGFzIGl0ZW0ubGFiZWwgZm9yIGl0ZW0gaW4gc2hvcHMnXG4gICAgICAgICAgICAgICAgICAgIGNvbHVtbnM6IDEyXG4gICAgICAgICAgICAgICAgICAgIGF0dHI6IHJlcXVpcmVkOiB0cnVlLCBuZ1Nob3c6ICdzaG9wcy5sZW5ndGggPiAyJ1xuICAgICAgICAgICAgICAgICAgICBtc2dzOiByZXF1aXJlZDogJ0EgbG9qYSDDqSBvYnJpZ2F0w7NyaWEnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIHByb3BlcnR5OiAnZGF0ZScsXG4gICAgICAgICAgICAgICAgICB0eXBlOiAnZGF0ZScsXG4gICAgICAgICAgICAgICAgICBsYWJlbDogJ0RhdGEgZG8gcGVkaWRvJyxcbiAgICAgICAgICAgICAgICAgIGNvbHVtbnM6IDYsXG4gICAgICAgICAgICAgICAgICBhdHRyOiByZXF1aXJlZDogdHJ1ZVxuICAgICAgICAgICAgICAgICAgbXNnczogcmVxdWlyZWQ6ICdBIGRhdGEgw6kgb2JyaWdhdMOzcmlhJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnR5OiAnZmV0Y2gnXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCdcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdWYWkgYnVzY2FyPydcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uczogNlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnR5OiAnZm9ybXBheW1lbnQnXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZWxlY3QnXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnRm9ybWEgZGUgcGFnYW1lbnRvJ1xuICAgICAgICAgICAgICAgICAgICBsaXN0OiAnaXRlbSBhcyBpdGVtIGZvciBpdGVtIGluIHBheW1lbnRzJ1xuICAgICAgICAgICAgICAgICAgICBhdHRyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIG5nSWY6ICchZm9ybVNldHRpbmdzLmRhdGEuZmV0Y2gnXG4gICAgICAgICAgICAgICAgICAgIG1zZ3M6IHJlcXVpcmVkOiAnQSBmb3JtYSBkZSBwYWdhbWVudG8gw6kgb2JyaWdhdMOzcmlhJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnR5OiAnY2hhbmdlJ1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbW9uZXknXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnTEFCRUwuQ0hBTkdFLkZPUidcbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICcwLDAwJ1xuICAgICAgICAgICAgICAgICAgICBjb2x1bW5zOiA2XG4gICAgICAgICAgICAgICAgICAgIGF0dHI6IG5nSWY6ICdmb3JtU2V0dGluZ3MuZGF0YS5mb3JtcGF5bWVudCA9PT0gXFwnRGluaGVpcm9cXCcgJiYgIWZvcm1TZXR0aW5ncy5kYXRhLmZldGNoJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdocidcbiAgICAgICAgICAgICAgICAgICAgYXR0cjogJ25nLWlmJzogJyFmb3JtU2V0dGluZ3MuZGF0YS5mZXRjaCdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eTogJ2FkZHJlc3MnXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZWxlY3QnXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnRW5kZXJlw6dvIGRlIGVudHJlZ2EnXG4gICAgICAgICAgICAgICAgICAgIGxpc3Q6ICdpdGVtIGFzIGl0ZW0gZm9yIGl0ZW0gaW4gYWRkcmVzc2VzJ1xuICAgICAgICAgICAgICAgICAgICBhdHRyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIG5nSWY6ICchZm9ybVNldHRpbmdzLmRhdGEuZmV0Y2gnXG4gICAgICAgICAgICAgICAgICAgIG1zZ3M6IHJlcXVpcmVkOiAnTyBlbmRlcmXDp28gZGUgZW50cmVnYSDDqSBvYnJpZ2F0w7NyaW8nXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydHk6ICdhZGRyZXNzMSdcbiAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICdOb3ZvIGVuZGVyZcOnbydcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uczogOFxuICAgICAgICAgICAgICAgICAgICBhdHRyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIG5nSWY6ICdmb3JtU2V0dGluZ3MuZGF0YS5hZGRyZXNzID09PSBcXCdPdXRyby4uLlxcJyAmJiAhZm9ybVNldHRpbmdzLmRhdGEuZmV0Y2gnXG4gICAgICAgICAgICAgICAgICAgIG1zZ3M6IHJlcXVpcmVkOiAnTyBub3ZvIGVuZGVyZcOnbyDDqSBvYnJpZ2F0w7NyaW8nXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydHk6ICdudW1iZXInXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdudW1iZXInXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnTsO6bWVybydcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uczogNFxuICAgICAgICAgICAgICAgICAgICBhdHRyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIG5nSWY6ICdmb3JtU2V0dGluZ3MuZGF0YS5hZGRyZXNzID09PSBcXCdPdXRyby4uLlxcJyAmJiAhZm9ybVNldHRpbmdzLmRhdGEuZmV0Y2gnXG4gICAgICAgICAgICAgICAgICAgIG1zZ3M6IHJlcXVpcmVkOiAnTyBuw7ptZXJvIMOpIG9icmlnYXTDs3JpbydcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eTogJ2NvbXBsZW1lbnQnXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnQ29tcGxlbWVudG8nXG4gICAgICAgICAgICAgICAgICAgIGNvbHVtbnM6IDZcbiAgICAgICAgICAgICAgICAgICAgYXR0cjogbmdJZjogJ2Zvcm1TZXR0aW5ncy5kYXRhLmFkZHJlc3MgPT09IFxcJ091dHJvLi4uXFwnICYmICFmb3JtU2V0dGluZ3MuZGF0YS5mZXRjaCdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eTogJ2Rpc3RyaWN0J1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ0JhaXJybydcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uczogNlxuICAgICAgICAgICAgICAgICAgICBhdHRyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIG5nSWY6ICdmb3JtU2V0dGluZ3MuZGF0YS5hZGRyZXNzID09PSBcXCdPdXRyby4uLlxcJyAmJiAhZm9ybVNldHRpbmdzLmRhdGEuZmV0Y2gnXG4gICAgICAgICAgICAgICAgICAgIG1zZ3M6IHJlcXVpcmVkOiAnTyBiYWlycm8gw6kgb2JyaWdhdMOzcmlvJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3BlcnR5OiAnc3RhdGUnXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZWxlY3QnXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnRXN0YWRvJ1xuICAgICAgICAgICAgICAgICAgICBjb2x1bW5zOiA2XG4gICAgICAgICAgICAgICAgICAgIGxpc3Q6ICdpdGVtLnZhbHVlIGFzIGl0ZW0ubGFiZWwgZm9yIGl0ZW0gaW4gc3RhdGVzJ1xuICAgICAgICAgICAgICAgICAgICBhdHRyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIG5nSWY6ICdmb3JtU2V0dGluZ3MuZGF0YS5hZGRyZXNzID09PSBcXCdPdXRyby4uLlxcJyAmJiAhZm9ybVNldHRpbmdzLmRhdGEuZmV0Y2gnXG4gICAgICAgICAgICAgICAgICAgIG1zZ3M6IHJlcXVpcmVkOiAnU2VsZWNpb25lIHVtIGVzdGFkbydcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0eTogJ2NpdHknXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZWxlY3QnXG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnQ2lkYWRlJ1xuICAgICAgICAgICAgICAgICAgICBjb2x1bW5zOiA2XG4gICAgICAgICAgICAgICAgICAgIGxpc3Q6ICdpdGVtLnZhbHVlIGFzIGl0ZW0ubGFiZWwgZm9yIGl0ZW0gaW4gY2l0aWVzJ1xuICAgICAgICAgICAgICAgICAgICBhdHRyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgIG5nSWY6ICdmb3JtU2V0dGluZ3MuZGF0YS5hZGRyZXNzID09PSBcXCdPdXRyby4uLlxcJyAmJiAhZm9ybVNldHRpbmdzLmRhdGEuZmV0Y2gnXG4gICAgICAgICAgICAgICAgICAgIG1zZ3M6IHJlcXVpcmVkOiAnU2VsZWNpb25lIHVtYSBjaWRhZGUnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgc3VibWl0OiAoZGF0YSkgLT5cbiAgICAgICAgICAgICAgICByZXR1cm4gaWYgISRzY29wZS5mb3JtLiR2YWxpZFxuXG4gICAgICAgICAgICAgICAgb3JkZXIgPVxuICAgICAgICAgICAgICAgICAgICBma2lkY2xpZW50OiAkcm9vdFNjb3BlLkdSSUZGTy51c2VyLmlkXG4gICAgICAgICAgICAgICAgICAgIGZldGNoOiBkYXRhLmZldGNoXG4gICAgICAgICAgICAgICAgICAgIHN1YnRvdGFsOiAkcm9vdFNjb3BlLmdyLmNhcnQudG90YWwoKVxuICAgICAgICAgICAgICAgICAgICBma2lkc2hvcDogZGF0YS5ma2lkc2hvcFxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0czogW11cblxuICAgICAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaCAkcm9vdFNjb3BlLmdyLmNhcnQuaXRlbXMsIChpdGVtKSAtPlxuICAgICAgICAgICAgICAgICAgICBpZiBpdGVtLmNvdW50ID4gMFxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXIucHJvZHVjdHMucHVzaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkcHJvZHVjdDogaXRlbS5pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZraWRzaG9wOiBkYXRhLmZraWRzaG9wXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IGl0ZW0uY291bnRcblxuICAgICAgICAgICAgICAgIGlmICFkYXRhLmZldGNoXG4gICAgICAgICAgICAgICAgICAgIG9yZGVyLmZvcm1wYXltZW50ID0gaWYgZGF0YS5mb3JtcGF5bWVudCB0aGVuIGRhdGEuZm9ybXBheW1lbnQgZWxzZSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgb3JkZXIuY2hhbmdlID0gaWYgZGF0YS5jaGFuZ2UgdGhlbiBkYXRhLmNoYW5nZSBlbHNlIHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICBpZiBkYXRhLmFkZHJlc3MgPT0gJ091dHJvLi4uJ1xuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXIuYWRkcmVzcyA9IGRhdGEuYWRkcmVzczFcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyLm51bWJlciA9IGRhdGEubnVtYmVyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlci5jb21wbGVtZW50ID0gZGF0YS5jb21wbGVtZW50XG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlci5kaXN0cmljdCA9IGRhdGEuZGlzdHJpY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyLmNpdHkgPSBkYXRhLmNpdHlcbiAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyLnN0YXRlID0gZGF0YS5zdGF0ZVxuICAgICAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlci5hZGRyZXNzID0gJHJvb3RTY29wZS5HUklGRk8udXNlci5hZGRyZXNzXG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlci5udW1iZXIgPSAkcm9vdFNjb3BlLkdSSUZGTy51c2VyLm51bWJlclxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXIuY29tcGxlbWVudCA9ICRyb290U2NvcGUuR1JJRkZPLnVzZXIuY29tcGxlbWVudFxuICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXIuZGlzdHJpY3QgPSAkcm9vdFNjb3BlLkdSSUZGTy51c2VyLmRpc3RyaWN0XG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlci5jaXR5ID0gJHJvb3RTY29wZS5HUklGRk8udXNlci5jaXR5XG4gICAgICAgICAgICAgICAgICAgICAgICBvcmRlci5zdGF0ZSA9ICRyb290U2NvcGUuR1JJRkZPLnVzZXIuc3RhdGVcblxuICAgICAgICAgICAgICAgICRnclJlc3RmdWwuY3JlYXRlXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZTogJ29yZGVyJ1xuICAgICAgICAgICAgICAgICAgICBhY3Rpb246ICdpbnNlcnQnXG4gICAgICAgICAgICAgICAgICAgIHBvc3Q6IG9yZGVyXG4gICAgICAgICAgICAgICAgLnRoZW4gKHIpIC0+XG4gICAgICAgICAgICAgICAgICAgIGlmIHIucmVzcG9uc2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbmlzaGVkID0gdHJ1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmZvcm0ucmVzZXQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgJHJvb3RTY29wZS5nci5jYXJ0LmNsZWFyKClcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0LnNob3cgci5zdGF0dXMsICdTZXUgcGVkaWRvIGZvaSBlbnZpYWRvIGNvbSBzdWNlc3NvLCB2b2PDqiBzZXLDoSByZWRpcmVjaW9uYWRvIHBhcmEgYWNvbXBhbmhhciBzZXUgcGVkaWRvLidcbiAgICAgICAgICAgICAgICAgICAgICAgICR0aW1lb3V0ICgtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSAkcm9vdFNjb3BlLkdSSUZGTy5jdXJBbGlhcyArICcvdXNlcidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICksIDUwMDBcbiAgICAgICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQuc2hvdyByLnN0YXR1cywgci5tZXNzYWdlXG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICwgLT5cbiAgICAgICAgICAgICAgICAgICAgYWxlcnQuc2hvdyAnZGFuZ2VyJywgJ0VSUk9SLkZBVEFMJ1xuXG4gICAgICAgICRzY29wZS4kd2F0Y2ggJ2Zvcm1TZXR0aW5ncy5kYXRhLnN0YXRlJywgKGUpIC0+XG4gICAgICAgICAgICBpZiBlXG4gICAgICAgICAgICAgICAgaWYgJHNjb3BlLmZvcm1TZXR0aW5ncy5kYXRhLnN0YXRlXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5jaXRpZXMgPSBbXVxuICAgICAgICAgICAgICAgICAgICBhbmd1bGFyLmZvckVhY2ggJGNpZGFkZUVzdGFkby5nZXQuY2lkYWRlcygkc2NvcGUuZm9ybVNldHRpbmdzLmRhdGEuc3RhdGUpLCAoYykgLT5cbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5jaXRpZXMucHVzaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBjXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGNcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmNpdGllcyA9IFtdXG4gICAgICAgICAgICAgICAgaWYgJHNjb3BlLmZvcm1TZXR0aW5ncy5kYXRhLnN0YXRlID09ICdTUCdcbiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmZvcm1TZXR0aW5ncy5kYXRhLmNpdHkgPSAnSXRhcGV2YSdcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS5mb3JtU2V0dGluZ3MuZGF0YS5jaXR5ID0gdW5kZWZpbmVkXG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgJHNjb3BlLmZvcm1TZXR0aW5ncy5kYXRhLmNpdHkgPSB1bmRlZmluZWRcblxuICAgICAgICAkc2NvcGUuJHdhdGNoIC0+XG4gICAgICAgICAgICAkcm9vdFNjb3BlLmdyLmNhcnQubGVuZ3RoKClcbiAgICAgICAgLCAtPlxuICAgICAgICAgICAgY2FydEVtcHR5KCkgaWYgJHJvb3RTY29wZS5nci5jYXJ0Lmxlbmd0aCgpID09IDAgYW5kICFmaW5pc2hlZFxuXG4gICAgICAgICRzY29wZS4kd2F0Y2ggJ2Zvcm0nLCAoZm9ybSkgLT5cbiAgICAgICAgICAgICRyb290U2NvcGUuZmluaXNoRm9ybSA9IGZvcm1cbiJdfQ==